---
interface Props {
  currentPage?: string;
}

const { currentPage = "" } = Astro.props;

const navItems = [
  { href: "/", label: "Accueil" },
  { href: "/gares-culturelles", label: "Gares culturelles" },
  { href: "/top-20", label: "Top 20" },
  { href: "/poi-interactif", label: "POI Interactif" },
  { href: "/simulateur-co2", label: "Simulateur CO₂" },
  { href: "/reseau-velo", label: "Réseau vélo" },
];
---

<header class="header">
  <div class="container">
    <nav class="nav">
      <div class="logo">
        <a href="/">
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect width="40" height="40" rx="10" fill="url(#gradient)"/>
            <path d="M12 20L16 16L24 24L28 20" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
            <circle cx="16" cy="16" r="2" fill="white"/>
            <circle cx="24" cy="24" r="2" fill="white"/>
            <defs>
              <linearGradient id="gradient" x1="0" y1="0" x2="40" y2="40" gradientUnits="userSpaceOnUse">
                <stop stop-color="#0066CC"/>
                <stop offset="1" stop-color="#00A859"/>
              </linearGradient>
            </defs>
          </svg>
          <span class="logo-text">Tourisme en Train</span>
        </a>
      </div>
      <button class="hamburger" id="hamburger" aria-label="Menu">
        <span></span>
        <span></span>
        <span></span>
      </button>
      
      <ul class="nav-links" id="navLinks">
        {navItems.map((item) => (
          <li>
            <a 
              href={item.href} 
              class={currentPage === item.href ? "active" : ""}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</header>

<script>
  // Toggle menu hamburger
  const hamburger = document.getElementById('hamburger');
  const navLinks = document.getElementById('navLinks');
  
  if (hamburger && navLinks) {
    hamburger.addEventListener('click', () => {
      hamburger.classList.toggle('active');
      navLinks.classList.toggle('active');
    });
    
    // Fermer le menu quand on clique sur un lien
    const links = navLinks.querySelectorAll('a');
    links.forEach(link => {
      link.addEventListener('click', () => {
        hamburger.classList.remove('active');
        navLinks.classList.remove('active');
      });
    });
  }
</script>

<style>
  .header {
    position: sticky;
    top: 0;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--color-border);
    z-index: 1000;
    padding: 1rem 0;
  }

  .nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
  }

  .logo a {
    display: flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
  }

  .logo-text {
    font-family: var(--font-heading);
    font-weight: 700;
    font-size: 1.25rem;
    color: var(--color-text-primary);
  }

  .hamburger {
    display: none;
    flex-direction: column;
    gap: 5px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    z-index: 1001;
  }

  .hamburger span {
    width: 25px;
    height: 3px;
    background: var(--color-primary);
    border-radius: 3px;
    transition: all 0.3s ease;
  }

  .hamburger.active span:nth-child(1) {
    transform: rotate(45deg) translate(8px, 8px);
  }

  .hamburger.active span:nth-child(2) {
    opacity: 0;
  }

  .hamburger.active span:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -7px);
  }

  .nav-links {
    display: flex;
    list-style: none;
    gap: 1.5rem;
  }

  .nav-links a {
    font-weight: 600;
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: color 0.3s ease;
    font-size: 0.9rem;
    padding: 0.5rem 0;
    border-bottom: 2px solid transparent;
  }

  .nav-links a:hover,
  .nav-links a.active {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  @media (max-width: 768px) {
    .hamburger {
      display: flex;
    }

    .nav-links {
      position: fixed;
      top: 72px;
      right: 0;
      width: 100%;
      max-width: 300px;
      height: calc(100vh - 72px);
      background: white;
      flex-direction: column;
      padding: 2rem;
      gap: 0;
      box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
      transform: translateX(100%);
      transition: transform 0.3s ease;
    }

    .nav-links.active {
      transform: translateX(0);
    }

    .nav-links li {
      width: 100%;
      border-bottom: 1px solid var(--color-border);
    }

    .nav-links a {
      display: block;
      padding: 1rem 0;
      font-size: 1.1rem;
      border-bottom: none;
    }

    .nav-links a.active {
      color: var(--color-primary);
      background: rgba(0, 102, 204, 0.05);
      padding-left: 1rem;
      border-left: 4px solid var(--color-primary);
    }
  }
</style>
