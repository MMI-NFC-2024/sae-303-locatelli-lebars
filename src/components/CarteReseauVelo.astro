---
import VisualizationWrapper from './VisualizationWrapper.astro';
import garesData from '../assets/gares_nettoyees_(1).json';
import { getDeptCode, CODES_NA } from '../utils/geo';

// Filtrer les gares de Nouvelle-Aquitaine
const garesNA = garesData.filter((gare: any) => 
  CODES_NA.includes(getDeptCode(gare["Code commune"]))
);

const mapId = `map-reseau-velo`;
---

<VisualizationWrapper
  title="R√©seau ferr√© et pistes cyclables"
  subtitle="L'alliance du train et du v√©lo : d√©couvrez comment les gares de Nouvelle-Aquitaine s'int√®grent au r√©seau cyclable r√©gional"
  id="carte-reseau-velo"
>
  <div id={mapId} class="leaflet-map"></div>
  
  <div class="legend-multi">
    <h4>L√©gende</h4>
    <div class="legend-items">
      <div class="legend-item">
        <span class="legend-symbol" style="background: #00A859;"></span>
        <span>Pistes cyclables</span>
      </div>
      <div class="legend-item">
        <span class="legend-symbol marker">üìç</span>
        <span>Gares ferroviaires</span>
      </div>
    </div>
    <p class="legend-note">üí° Un r√©seau compl√©mentaire pour un tourisme durable et accessible</p>
  </div>
</VisualizationWrapper>

<style>
  .leaflet-map {
    width: 100%;
    height: 700px;
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid var(--color-border);
  }
  
  .legend-multi {
    margin-top: 1.5rem;
    padding: 1.5rem;
    background: var(--color-surface);
    border-radius: 8px;
    border-left: 4px solid var(--color-secondary);
  }
  
  .legend-multi h4 {
    font-size: 1rem;
    margin-bottom: 1rem;
    color: var(--color-text-primary);
  }
  
  .legend-items {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
    margin-bottom: 1rem;
  }
  
  .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }
  
  .legend-symbol {
    width: 30px;
    height: 4px;
    border-radius: 2px;
    display: inline-block;
  }
  
  .legend-symbol.marker {
    width: auto;
    height: auto;
    font-size: 1.25rem;
  }
  
  .legend-note {
    font-size: 0.875rem;
    color: var(--color-text-light);
    font-style: italic;
    margin: 0.5rem 0 0 0;
  }
</style>

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin=""
/>

<script
  src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""
></script>

<script define:vars={{ garesNA }}>
  window.addEventListener('load', async () => {
    if (typeof L === 'undefined') {
      console.error('Leaflet not loaded');
      return;
    }
    
    const mapId = 'map-reseau-velo';
    const mapElement = document.getElementById(mapId);
    if (!mapElement) return;
    
    // Initialiser la carte
    const map = L.map(mapId).setView([44.8, -0.5], 8);
    
    // Ajouter le fond de carte
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '¬© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
          maxZoom: 19
    }).addTo(map);
    
    // Charger les pistes cyclables depuis le fichier
    try {
      const response = await fetch('/traces_cyclables_nouvelle_aquitaine.geojson');
      const pistesData = await response.json();
      
      // Ajouter les pistes cyclables
      const pistesLayer = L.geoJSON(pistesData, {
            style: {
              color: '#00A859',
              weight: 2,
              opacity: 0.7
            },
            onEachFeature: (feature, layer) => {
              if (feature.properties && feature.properties.ame_d) {
                layer.bindPopup(`<strong>Type :</strong> ${feature.properties.ame_d}`);
              }
        }
      }).addTo(map);
      
      // Ajuster la vue sur les pistes cyclables
      if (pistesData.features && pistesData.features.length > 0) {
        const bounds = pistesLayer.getBounds();
        map.fitBounds(bounds, { padding: [50, 50], maxZoom: 9 });
      }
    } catch (error) {
      console.error('Erreur lors du chargement des pistes cyclables:', error);
    }
    
    // Ajouter les gares
    const gareIcon = L.icon({
          iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
          iconSize: [20, 32],
          iconAnchor: [10, 32],
          popupAnchor: [0, -32],
          shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
          shadowSize: [30, 32]
    });
    
    garesNA.forEach((gare) => {
      L.marker([gare.latitude, gare.longitude], { icon: gareIcon })
        .bindPopup(`<strong>${gare.Nom}</strong>`)
        .addTo(map);
    });
  });
</script>
